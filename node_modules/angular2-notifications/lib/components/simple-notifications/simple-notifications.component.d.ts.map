{"version":3,"file":"simple-notifications.component.d.ts","sources":["simple-notifications.component.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { EventEmitter, OnDestroy, OnInit, ChangeDetectorRef } from '@angular/core';\r\nimport { NotificationAnimationType } from '../../enums/notification-animation-type.enum';\r\nimport { Notification } from '../../interfaces/notification.type';\r\nimport { Options, Position } from '../../interfaces/options.type';\r\nimport { NotificationsService } from '../../services/notifications.service';\r\nexport declare class SimpleNotificationsComponent implements OnInit, OnDestroy {\r\n    private service;\r\n    private cd;\r\n    constructor(service: NotificationsService, cd: ChangeDetectorRef);\r\n    options: Options;\r\n    create: EventEmitter<any>;\r\n    destroy: EventEmitter<any>;\r\n    notifications: Notification[];\r\n    position: Position;\r\n    private lastNotificationCreated;\r\n    private listener;\r\n    private lastOnBottom;\r\n    private maxStack;\r\n    private preventLastDuplicates;\r\n    private preventDuplicates;\r\n    timeOut: number;\r\n    maxLength: number;\r\n    clickToClose: boolean;\r\n    clickIconToClose: boolean;\r\n    showProgressBar: boolean;\r\n    pauseOnHover: boolean;\r\n    theClass: string;\r\n    rtl: boolean;\r\n    animate: NotificationAnimationType;\r\n    private usingComponentOptions;\r\n    ngOnInit(): void;\r\n    ngOnDestroy(): void;\r\n    defaultBehavior(value: any): void;\r\n    add(item: Notification): void;\r\n    block(item: Notification): boolean;\r\n    checkStandard(checker: Notification, item: Notification): boolean;\r\n    checkHtml(checker: Notification, item: Notification): boolean;\r\n    attachChanges(options: any): void;\r\n    buildEmit(notification: Notification, to: boolean): Notification;\r\n    cleanSingle(id: string): void;\r\n}\r\n"]}