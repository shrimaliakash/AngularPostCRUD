{"version":3,"sources":["ng://angular2-notifications/lib/consts/default-icons.const.ts","ng://angular2-notifications/lib/enums/notification-type.enum.ts","ng://angular2-notifications/lib/enums/notification-animation-type.enum.ts","ng://angular2-notifications/lib/services/notifications.service.ts","ng://angular2-notifications/lib/components/notification/notification.component.ts","ng://angular2-notifications/lib/components/simple-notifications/simple-notifications.component.ts","ng://angular2-notifications/lib/consts/default-options.const.ts","ng://angular2-notifications/lib/simple-notifications.module.ts"],"names":["NotificationType","DEFAULT_ICONS","alert","error","info","success","warn","NotificationAnimationType","NotificationsService","globalOptions","this","emitter","Subject","icons","prototype","set","notification","to","id","override","Math","random","toString","substring","click","EventEmitter","clickIcon","timeoutEnd","next","command","add","title","content","context","type","Success","icon","Error","Alert","Info","Warn","bare","Bare","create","html","remove","Inject","args","__decorate","Injectable","__param","NotificationComponent","notificationService","domSanitizer","cd","zone","_this","titleIsTemplate","contentIsTemplate","htmlIsTemplate","progressWidth","stopTime","framesPerSecond","instance","now","Date","getTime","endTime","item","emit","showProgressBar","min","startTime","sleepTime","timeOut","timer","setTimeout","run","destroyed","detectChanges","ngOnInit","attachOverrides","animate","state","startTimeOut","contentType","safeSvg","bypassSecurityTrustHtml","safeInputHtml","ngOnDestroy","clearTimeout","detach","runOutsideAngular","onEnter","pauseOnHover","pauseStart","onLeave","onClick","event","clickToClose","onClickIcon","clickIconToClose","Object","keys","forEach","a","hasOwnProperty","key","TemplateRef","DomSanitizer","ChangeDetectorRef","NgZone","Input","__decorate$1","Component","selector","encapsulation","ViewEncapsulation","None","animations","trigger","style","opacity","transition","transform","template","changeDetection","ChangeDetectionStrategy","OnPush","SimpleNotificationsComponent","service","destroy","notifications","position","lastOnBottom","maxStack","preventLastDuplicates","preventDuplicates","maxLength","theClass","rtl","FromRight","usingComponentOptions","defineProperty","opt","attachChanges","listener","subscribe","cleanSingle","defaultBehavior","unsubscribe","value","splice","indexOf","buildEmit","createdOn","toBlock","block","lastNotificationCreated","length","push","toCheck","checkHtml","checkStandard","_b","__values","_c","done","comp","checker","options","toEmit","destroyedOn","noti","indexOfDelete","doDelete","idx","Output","__decorate$2","DEFAULT_OPTIONS","OPTIONS","InjectionToken","optionsFactory","__assign","SimpleNotificationsModule","forRoot","ngModule","SimpleNotificationsModule_1","providers","provide","useValue","useFactory","deps","__decorate$3","NgModule","imports","CommonModule","declarations","exports"],"mappings":"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","sourcesContent":["import {Icons} from '../interfaces/icons';\n\nexport const DEFAULT_ICONS: Icons = {\n  alert: `\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n            <path d=\"M22 5.72l-4.6-3.86-1.29 1.53 4.6 3.86L22 5.72zM7.88 3.39L6.6 1.86 2 5.71l1.29 1.53 4.59-3.85zM12.5 8H11v6l4.75 2.85.75-1.23-4-2.37V8zM12 4c-4.97 0-9 4.03-9 9s4.02 9 9 9c4.97 0 9-4.03 9-9s-4.03-9-9-9zm0 16c-3.87 0-7-3.13-7-7s3.13-7 7-7 7 3.13 7 7-3.13 7-7 7z\"/>\n        </svg>\n    `,\n  error: `\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0V0z\" fill=\"none\"/>\n            <path d=\"M11 15h2v2h-2zm0-8h2v6h-2zm.99-5C6.47 2 2 6.48 2 12s4.47 10 9.99 10C17.52 22 22 17.52 22 12S17.52 2 11.99 2zM12 20c-4.42 0-8-3.58-8-8s3.58-8 8-8 8 3.58 8 8-3.58 8-8 8z\"/>\n        </svg>\n    `,\n  info: `\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n            <path d=\"M11 17h2v-6h-2v6zm1-15C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8zM11 9h2V7h-2v2z\"/>\n        </svg>\n    `,\n  success: `\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\"/>\n            <path d=\"M9 16.2L4.8 12l-1.4 1.4L9 19 21 7l-1.4-1.4L9 16.2z\"/>\n        </svg>\n    `,\n  warn: `\n        <svg class=\"simple-notification-svg\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"#ffffff\" width=\"64\" viewBox=\"0 0 64 64\" height=\"64\">\n          <circle cx=\"32.086\" cy=\"50.142\" r=\"2.256\"/>\n          <path d=\"M30.08 25.012V42.32c0 1.107.897 2.005 2.006 2.005s2.006-.897 2.006-2.005V25.012c0-1.107-.897-2.006-2.006-2.006s-2.006.898-2.006 2.006z\"/>\n          <path d=\"M63.766 59.234L33.856 3.082c-.697-1.308-2.844-1.308-3.54 0L.407 59.234c-.331.622-.312 1.372.051 1.975.362.605 1.015.975 1.72.975h59.816c.705 0 1.357-.369 1.721-.975.361-.603.381-1.353.051-1.975zM5.519 58.172L32.086 8.291l26.568 49.881H5.519z\"/>\n        </svg>\n    `\n};\n","export enum NotificationType {\n  Success = 'success',\n  Error = 'error',\n  Alert = 'alert',\n  Info = 'info',\n  Warn = 'warn',\n  Bare = 'bare'\n}\n","export enum NotificationAnimationType {\n  Fade = 'fade',\n  FromTop = 'fromTop',\n  FromRight = 'fromRight',\n  FromBottom = 'fromBottom',\n  FromLeft = 'fromLeft',\n  Scale = 'scale',\n  Rotate = 'rotate'\n}\n","import { EventEmitter, Inject, Injectable } from '@angular/core';\nimport { Subject } from 'rxjs';\nimport { DEFAULT_ICONS } from '../consts/default-icons.const';\nimport { NotificationType } from '../enums/notification-type.enum';\nimport { Icons } from '../interfaces/icons';\nimport { NotificationEvent } from '../interfaces/notification-event.type';\nimport { Notification } from '../interfaces/notification.type';\n\n@Injectable()\nexport class NotificationsService {\n  constructor(\n    @Inject('options') public globalOptions: any\n  ) { }\n\n  emitter = new Subject<NotificationEvent>();\n  icons: Icons = DEFAULT_ICONS;\n\n  set(notification: Notification, to: boolean): Notification {\n    notification.id = notification.override && notification.override.id ?\n      notification.override.id :\n      Math.random().toString(36).substring(3);\n    notification.click = new EventEmitter<{}>();\n    notification.clickIcon = new EventEmitter<{}>();\n    notification.timeoutEnd = new EventEmitter<{}>();\n\n    this.emitter.next({ command: 'set', notification, add: to });\n    return notification;\n  }\n\n  success(title: any = '', content: any = '', override?: any, context?: any): Notification {\n    return this.set({ title, content: content || '', type: NotificationType.Success, icon: this.icons.success, override, context }, true);\n  }\n\n  error(title: any = '', content: any = '', override?: any, context?: any): Notification {\n    return this.set({ title, content: content || '', type: NotificationType.Error, icon: this.icons.error, override, context }, true);\n  }\n\n  alert(title: any = '', content: any = '', override?: any, context?: any): Notification {\n    return this.set({ title, content: content || '', type: NotificationType.Alert, icon: this.icons.alert, override, context }, true);\n  }\n\n  info(title: any = '', content: any = '', override?: any, context?: any): Notification {\n    return this.set({ title, content: content || '', type: NotificationType.Info, icon: this.icons.info, override, context }, true);\n  }\n\n  warn(title: any = '', content: any = '', override?: any, context?: any): Notification {\n    return this.set({ title, content: content || '', type: NotificationType.Warn, icon: this.icons.warn, override, context }, true);\n  }\n\n  bare(title: any = '', content: any = '', override?: any, context?: any): Notification {\n    return this.set({ title, content: content || '', type: NotificationType.Bare, icon: 'bare', override, context }, true);\n  }\n\n  // With type method\n  create(title: any = '', content: any = '', type = NotificationType.Success, override?: any, context?: any): Notification {\n    return this.set({ title, content, type, icon: (this.icons as any)[type], override, context }, true);\n  }\n\n  // HTML Notification method\n  html(html: any, type = NotificationType.Success, override?: any, icon = 'bare', context?: any): Notification {\n    return this.set({ html, type, icon: (this.icons as any)[icon], override, context }, true);\n  }\n\n  // Remove all notifications method\n  remove(id?: string): void {\n    if (id) {\n      this.emitter.next({ command: 'clean', id });\n    } else {\n      this.emitter.next({ command: 'cleanAll' });\n    }\n  }\n}\n","import { animate, state, style, transition, trigger } from '@angular/animations';\r\nimport { ChangeDetectionStrategy, Component, Input, NgZone, OnDestroy, OnInit, TemplateRef, ViewEncapsulation, ChangeDetectorRef, ViewRef } from '@angular/core';\r\nimport { DomSanitizer, SafeHtml } from '@angular/platform-browser';\r\nimport { NotificationAnimationType } from '../../enums/notification-animation-type.enum';\r\nimport { Notification } from '../../interfaces/notification.type';\r\nimport { NotificationsService } from '../../services/notifications.service';\r\n\r\n@Component({\r\n  selector: 'simple-notification',\r\n  encapsulation: ViewEncapsulation.None,\r\n  animations: [\r\n    trigger('enterLeave', [\r\n\r\n      // Fade\r\n      state('fade', style({opacity: 1})),\r\n      transition('* => fade', [\r\n        style({opacity: 0}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('fadeOut', style({opacity: 0})),\r\n      transition('fade => fadeOut', [\r\n        style({opacity: 1}),\r\n        animate('300ms ease-in-out')\r\n      ]),\r\n\r\n      // Enter from top\r\n      state('fromTop', style({opacity: 1, transform: 'translateY(0)'})),\r\n      transition('* => fromTop', [\r\n        style({opacity: 0, transform: 'translateY(-5%)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('fromTopOut', style({opacity: 0, transform: 'translateY(5%)'})),\r\n      transition('fromTop => fromTopOut', [\r\n        style({opacity: 1, transform: 'translateY(0)'}),\r\n        animate('300ms ease-in-out')\r\n      ]),\r\n\r\n      // Enter from right\r\n      state('fromRight', style({opacity: 1, transform: 'translateX(0)'})),\r\n      transition('* => fromRight', [\r\n        style({opacity: 0, transform: 'translateX(5%)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('fromRightOut', style({opacity: 0, transform: 'translateX(-5%)'})),\r\n      transition('fromRight => fromRightOut', [\r\n        style({opacity: 1, transform: 'translateX(0)'}),\r\n        animate('300ms ease-in-out')\r\n      ]),\r\n\r\n      // Enter from bottom\r\n      state('fromBottom', style({opacity: 1, transform: 'translateY(0)'})),\r\n      transition('* => fromBottom', [\r\n        style({opacity: 0, transform: 'translateY(5%)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('fromBottomOut', style({opacity: 0, transform: 'translateY(-5%)'})),\r\n      transition('fromBottom => fromBottomOut', [\r\n        style({opacity: 1, transform: 'translateY(0)'}),\r\n        animate('300ms ease-in-out')\r\n      ]),\r\n\r\n      // Enter from left\r\n      state('fromLeft', style({opacity: 1, transform: 'translateX(0)'})),\r\n      transition('* => fromLeft', [\r\n        style({opacity: 0, transform: 'translateX(-5%)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('fromLeftOut', style({opacity: 0, transform: 'translateX(5%)'})),\r\n      transition('fromLeft => fromLeftOut', [\r\n        style({opacity: 1, transform: 'translateX(0)'}),\r\n        animate('300ms ease-in-out')\r\n      ]),\r\n\r\n      // Rotate\r\n      state('scale', style({opacity: 1, transform: 'scale(1)'})),\r\n      transition('* => scale', [\r\n        style({opacity: 0, transform: 'scale(0)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('scaleOut', style({opacity: 0, transform: 'scale(0)'})),\r\n      transition('scale => scaleOut', [\r\n        style({opacity: 1, transform: 'scale(1)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n\r\n      // Scale\r\n      state('rotate', style({opacity: 1, transform: 'rotate(0deg)'})),\r\n      transition('* => rotate', [\r\n        style({opacity: 0, transform: 'rotate(5deg)'}),\r\n        animate('400ms ease-in-out')\r\n      ]),\r\n      state('rotateOut', style({opacity: 0, transform: 'rotate(-5deg)'})),\r\n      transition('rotate => rotateOut', [\r\n        style({opacity: 1, transform: 'rotate(0deg)'}),\r\n        animate('400ms ease-in-out')\r\n      ])\r\n    ])\r\n  ],\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\n\r\nexport class NotificationComponent implements OnInit, OnDestroy {\r\n\r\n  @Input() timeOut: number;\r\n  @Input() showProgressBar: boolean;\r\n  @Input() pauseOnHover: boolean;\r\n  @Input() clickToClose: boolean;\r\n  @Input() clickIconToClose: boolean;\r\n  @Input() maxLength: number;\r\n  @Input() theClass: string;\r\n  @Input() rtl: boolean;\r\n  @Input() animate: NotificationAnimationType;\r\n  @Input() position: number;\r\n  @Input() item: Notification;\r\n\r\n\r\n  // Progress bar variables\r\n  title: any;\r\n  content: any;\r\n\r\n  titleIsTemplate = false;\r\n  contentIsTemplate = false;\r\n  htmlIsTemplate = false;\r\n\r\n  progressWidth = 0;\r\n  safeSvg: SafeHtml;\r\n  safeInputHtml: SafeHtml;\r\n\r\n  private stopTime = false;\r\n  private timer: any;\r\n  private framesPerSecond = 40;\r\n  private sleepTime: number;\r\n  private startTime: number;\r\n  private endTime: number;\r\n  private pauseStart: number;\r\n\r\n  private icon: string;\r\n\r\n  constructor(\r\n    private notificationService: NotificationsService,\r\n    private domSanitizer: DomSanitizer,\r\n    private cd: ChangeDetectorRef,\r\n    private zone: NgZone\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    if (this.item.override) {\r\n      this.attachOverrides();\r\n    }\r\n\r\n    if (this.animate) {\r\n      this.item.state = this.animate;\r\n    }\r\n\r\n    if (this.timeOut !== 0) {\r\n      this.startTimeOut();\r\n    }\r\n\r\n    this.contentType(this.item.title, 'title');\r\n    this.contentType(this.item.content, 'content');\r\n    this.contentType(this.item.html, 'html');\r\n\r\n    this.safeSvg = this.domSanitizer.bypassSecurityTrustHtml(this.icon || this.item.icon);\r\n    this.safeInputHtml = this.domSanitizer.bypassSecurityTrustHtml(this.item.html);\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    clearTimeout(this.timer);\r\n    this.cd.detach();\r\n  }\r\n\r\n  startTimeOut(): void {\r\n    this.sleepTime = 1000 / this.framesPerSecond /* ms */;\r\n    this.startTime = new Date().getTime();\r\n    this.endTime = this.startTime + this.timeOut;\r\n    this.zone.runOutsideAngular(() => this.timer = setTimeout(this.instance, this.sleepTime));\r\n  }\r\n\r\n  onEnter() {\r\n    if (this.pauseOnHover) {\r\n      this.stopTime = true;\r\n      this.pauseStart = new Date().getTime();\r\n    }\r\n  }\r\n\r\n  onLeave() {\r\n    if (this.pauseOnHover) {\r\n      this.stopTime = false;\r\n      this.startTime += (new Date().getTime() - this.pauseStart);\r\n      this.endTime += (new Date().getTime() - this.pauseStart);\r\n      this.zone.runOutsideAngular(() => setTimeout(this.instance, this.sleepTime));\r\n    }\r\n  }\r\n\r\n  onClick(event: MouseEvent) {\r\n    this.item.click!.emit(event);\r\n\r\n    if (this.clickToClose) {\r\n      this.remove();\r\n    }\r\n  }\r\n\r\n  onClickIcon(event: MouseEvent) {\r\n    this.item.clickIcon!.emit(event);\r\n\r\n    if (this.clickIconToClose) {\r\n      this.remove();\r\n    }\r\n  }\r\n\r\n  // Attach all the overrides\r\n  attachOverrides() {\r\n    Object.keys(this.item.override).forEach(a => {\r\n      if (this.hasOwnProperty(a)) {\r\n        (this as any)[a] = this.item.override[a];\r\n      }\r\n    });\r\n  }\r\n\r\n  private instance = () => {\r\n    const now = new Date().getTime();\r\n\r\n    if (this.endTime < now) {\r\n      this.remove();\r\n      this.item.timeoutEnd!.emit();\r\n    } else if (!this.stopTime) {\r\n      if (this.showProgressBar) {\r\n        // We add this.sleepTime just to have 100% before close\r\n        this.progressWidth = Math.min((now - this.startTime + this.sleepTime) * 100 / this.timeOut, 100);\r\n      }\r\n\r\n      this.timer = setTimeout(this.instance, this.sleepTime);\r\n    }\r\n    this.zone.run(() => {\r\n      if (!(this.cd as ViewRef).destroyed) {\r\n        this.cd.detectChanges();\r\n      }\r\n    });\r\n  }\r\n\r\n  private remove() {\r\n    if (this.animate) {\r\n      this.item.state = this.animate + 'Out';\r\n      setTimeout(() => {\r\n        this.notificationService.set(this.item, false);\r\n      }, 310);\r\n    } else {\r\n      this.notificationService.set(this.item, false);\r\n    }\r\n  }\r\n\r\n  private contentType(item: any, key: string) {\r\n    if (item instanceof TemplateRef) {\r\n      this[key] = item;\r\n    } else {\r\n      this[key] = this.domSanitizer.bypassSecurityTrustHtml(item);\r\n    }\r\n\r\n    this[key + 'IsTemplate'] = item instanceof TemplateRef;\r\n  }\r\n}\r\n","import { ChangeDetectionStrategy, Component, EventEmitter, Input, OnDestroy, OnInit, Output, ViewEncapsulation, ChangeDetectorRef, ViewRef } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { NotificationAnimationType } from '../../enums/notification-animation-type.enum';\r\nimport { Notification } from '../../interfaces/notification.type';\r\nimport { Options, Position } from '../../interfaces/options.type';\r\nimport { NotificationsService } from '../../services/notifications.service';\r\n\r\n@Component({\r\n  selector: 'simple-notifications',\r\n  encapsulation: ViewEncapsulation.None,\r\n  templateUrl: './simple-notifications.component.html',\r\n  styleUrls: ['./simple-notifications.component.css'],\r\n  changeDetection: ChangeDetectionStrategy.OnPush\r\n})\r\nexport class SimpleNotificationsComponent implements OnInit, OnDestroy {\r\n  constructor(\r\n    private service: NotificationsService,\r\n    private cd: ChangeDetectorRef\r\n  ) { }\r\n\r\n  @Input() set options(opt: Options) {\r\n    this.usingComponentOptions = true;\r\n    this.attachChanges(opt);\r\n  }\r\n\r\n  @Output() create = new EventEmitter();\r\n  @Output() destroy = new EventEmitter();\r\n\r\n  notifications: Notification[] = [];\r\n  position: Position = ['bottom', 'right'];\r\n\r\n  private lastNotificationCreated: Notification;\r\n  private listener: Subscription;\r\n\r\n  // Received values\r\n  private lastOnBottom = true;\r\n  private maxStack = 8;\r\n  private preventLastDuplicates: any = false;\r\n  private preventDuplicates = false;\r\n\r\n  // Sent values\r\n  timeOut = 0;\r\n  maxLength = 0;\r\n  clickToClose = true;\r\n  clickIconToClose = false;\r\n  showProgressBar = true;\r\n  pauseOnHover = true;\r\n  theClass = '';\r\n  rtl = false;\r\n  animate: NotificationAnimationType = NotificationAnimationType.FromRight;\r\n\r\n  private usingComponentOptions = false;\r\n\r\n  ngOnInit() {\r\n\r\n    /**\r\n     * Only attach global options if config\r\n     * options were never sent through input\r\n     */\r\n    if (!this.usingComponentOptions) {\r\n      this.attachChanges(\r\n        this.service.globalOptions\r\n      );\r\n    }\r\n\r\n    this.listener = this.service.emitter\r\n      .subscribe(item => {\r\n        switch (item.command) {\r\n          case 'cleanAll':\r\n            this.notifications = [];\r\n            break;\r\n\r\n          case 'clean':\r\n            this.cleanSingle(item.id!);\r\n            break;\r\n\r\n          case 'set':\r\n            if (item.add) {\r\n              this.add(item.notification!);\r\n            } else {\r\n              this.defaultBehavior(item);\r\n            }\r\n            break;\r\n\r\n          default:\r\n            this.defaultBehavior(item);\r\n            break;\r\n        }\r\n        if (!(this.cd as ViewRef).destroyed) {\r\n          this.cd.detectChanges();\r\n        }\r\n      });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    if (this.listener) {\r\n      this.listener.unsubscribe();\r\n    }\r\n    this.cd.detach();\r\n  }\r\n\r\n  // Default behavior on event\r\n  defaultBehavior(value: any): void {\r\n    this.notifications.splice(this.notifications.indexOf(value.notification), 1);\r\n    this.destroy.emit(this.buildEmit(value.notification, false));\r\n  }\r\n\r\n\r\n  // Add the new notification to the notification array\r\n  add(item: Notification): void {\r\n    item.createdOn = new Date();\r\n\r\n    const toBlock: boolean = this.preventLastDuplicates || this.preventDuplicates ? this.block(item) : false;\r\n\r\n    // Save this as the last created notification\r\n    this.lastNotificationCreated = item;\r\n    // Override icon if set\r\n    if (item.override && item.override.icons && item.override.icons[item.type]) {\r\n      item.icon = item.override.icons[item.type];\r\n    }\r\n\r\n    if (!toBlock) {\r\n      // Check if the notification should be added at the start or the end of the array\r\n      if (this.lastOnBottom) {\r\n        if (this.notifications.length >= this.maxStack) {\r\n          this.notifications.splice(0, 1);\r\n        }\r\n\r\n        this.notifications.push(item);\r\n      } else {\r\n        if (this.notifications.length >= this.maxStack) {\r\n          this.notifications.splice(this.notifications.length - 1, 1);\r\n        }\r\n\r\n        this.notifications.splice(0, 0, item);\r\n      }\r\n\r\n      this.create.emit(this.buildEmit(item, true));\r\n    }\r\n  }\r\n\r\n  // Check if notifications should be prevented\r\n  block(item: Notification): boolean {\r\n\r\n    const toCheck = item.html ? this.checkHtml : this.checkStandard;\r\n\r\n    if (this.preventDuplicates && this.notifications.length > 0) {\r\n      for (const notification of this.notifications) {\r\n        if (toCheck(notification, item)) {\r\n          return true;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (this.preventLastDuplicates) {\r\n\r\n      let comp: Notification;\r\n\r\n      if (this.preventLastDuplicates === 'visible' && this.notifications.length > 0) {\r\n        if (this.lastOnBottom) {\r\n          comp = this.notifications[this.notifications.length - 1];\r\n        } else {\r\n          comp = this.notifications[0];\r\n        }\r\n      } else if (this.preventLastDuplicates === 'all' && this.lastNotificationCreated) {\r\n        comp = this.lastNotificationCreated;\r\n      } else {\r\n        return false;\r\n      }\r\n      return toCheck(comp, item);\r\n    }\r\n\r\n    return false;\r\n  }\r\n\r\n  checkStandard(checker: Notification, item: Notification): boolean {\r\n    return checker.type === item.type && checker.title === item.title && checker.content === item.content;\r\n  }\r\n\r\n  checkHtml(checker: Notification, item: Notification): boolean {\r\n    return checker.html ?\r\n      checker.type === item.type && checker.title === item.title && checker.content === item.content && checker.html === item.html :\r\n      false;\r\n  }\r\n\r\n  // Attach all the changes received in the options object\r\n  attachChanges(options: any) {\r\n    for (const key in options) {\r\n      if (this.hasOwnProperty(key)) {\r\n        (this as any)[key] = options[key];\r\n      } else if (key === 'icons') {\r\n        this.service.icons = options[key];\r\n      }\r\n    }\r\n  }\r\n\r\n  buildEmit(notification: Notification, to: boolean) {\r\n    const toEmit: Notification = {\r\n      createdOn: notification.createdOn,\r\n      type: notification.type,\r\n      icon: notification.icon,\r\n      id: notification.id\r\n    };\r\n\r\n    if (notification.html) {\r\n      toEmit.html = notification.html;\r\n    } else {\r\n      toEmit.title = notification.title;\r\n      toEmit.content = notification.content;\r\n    }\r\n\r\n    if (!to) {\r\n      toEmit.destroyedOn = new Date();\r\n    }\r\n\r\n    return toEmit;\r\n  }\r\n\r\n  cleanSingle(id: string): void {\r\n    let indexOfDelete = 0;\r\n    let doDelete = false;\r\n    let noti;\r\n\r\n    this.notifications.forEach((notification, idx) => {\r\n      if (notification.id === id) {\r\n        indexOfDelete = idx;\r\n        noti = notification;\r\n        doDelete = true;\r\n      }\r\n    });\r\n\r\n    if (doDelete) {\r\n      this.notifications.splice(indexOfDelete, 1);\r\n      this.destroy.emit(this.buildEmit(noti, false));\r\n    }\r\n  }\r\n}\r\n","import {DEFAULT_ICONS} from './default-icons.const';\nimport {Options} from '../interfaces/options.type';\nimport {NotificationAnimationType} from '../enums/notification-animation-type.enum';\n\nexport const DEFAULT_OPTIONS: Options = {\n  position: ['bottom', 'right'],\n  timeOut: 0,\n  showProgressBar: true,\n  pauseOnHover: true,\n  lastOnBottom: true,\n  clickToClose: true,\n  clickIconToClose: false,\n  maxLength: 0,\n  maxStack: 8,\n  preventDuplicates: false,\n  preventLastDuplicates: false,\n  theClass: '',\n  rtl: false,\n  animate: NotificationAnimationType.FromRight,\n  icons: DEFAULT_ICONS\n};\n","import { CommonModule } from '@angular/common';\nimport { InjectionToken, ModuleWithProviders, NgModule } from '@angular/core';\nimport { NotificationComponent } from './components/notification/notification.component';\nimport { SimpleNotificationsComponent } from './components/simple-notifications/simple-notifications.component';\nimport { DEFAULT_OPTIONS } from './consts/default-options.const';\nimport { Options } from './interfaces/options.type';\nimport { NotificationsService } from './services/notifications.service';\n\nexport const OPTIONS = new InjectionToken<Options>('options');\nexport function optionsFactory(options) {\n  return {\n    ...DEFAULT_OPTIONS,\n    ...options\n  };\n}\n\n@NgModule({\n  imports: [\n    CommonModule\n  ],\n  declarations: [\n    SimpleNotificationsComponent,\n    NotificationComponent\n  ],\n  exports: [SimpleNotificationsComponent]\n})\nexport class SimpleNotificationsModule {\n  static forRoot(options: Options = {}): ModuleWithProviders<SimpleNotificationsModule> {\n    return {\n      ngModule: SimpleNotificationsModule,\n      providers: [\n        NotificationsService,\n        {\n          provide: OPTIONS,\n          useValue: options\n        },\n        {\n          provide: 'options',\n          useFactory: optionsFactory,\n          deps: [OPTIONS]\n        }\n      ]\n    };\n  }\n}\n"]}