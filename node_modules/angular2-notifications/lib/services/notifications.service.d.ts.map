{"version":3,"file":"notifications.service.d.ts","sources":["notifications.service.d.ts"],"names":[],"mappings":"AAAA;AACA;AACA;AACA;AACA;;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AACA","sourcesContent":["import { Subject } from 'rxjs';\r\nimport { NotificationType } from '../enums/notification-type.enum';\r\nimport { Icons } from '../interfaces/icons';\r\nimport { NotificationEvent } from '../interfaces/notification-event.type';\r\nimport { Notification } from '../interfaces/notification.type';\r\nexport declare class NotificationsService {\r\n    globalOptions: any;\r\n    constructor(globalOptions: any);\r\n    emitter: Subject<NotificationEvent>;\r\n    icons: Icons;\r\n    set(notification: Notification, to: boolean): Notification;\r\n    success(title?: any, content?: any, override?: any, context?: any): Notification;\r\n    error(title?: any, content?: any, override?: any, context?: any): Notification;\r\n    alert(title?: any, content?: any, override?: any, context?: any): Notification;\r\n    info(title?: any, content?: any, override?: any, context?: any): Notification;\r\n    warn(title?: any, content?: any, override?: any, context?: any): Notification;\r\n    bare(title?: any, content?: any, override?: any, context?: any): Notification;\r\n    create(title?: any, content?: any, type?: NotificationType, override?: any, context?: any): Notification;\r\n    html(html: any, type?: NotificationType, override?: any, icon?: string, context?: any): Notification;\r\n    remove(id?: string): void;\r\n}\r\n"]}